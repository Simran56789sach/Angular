import { Component, inject } from '@angular/core';
import { Router } from '@angular/router';
import { LoginService } from '../login-service.service';
import * as CryptoJS from 'crypto-js';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrl: './login.component.css'
})
export class LoginComponent {
  signupUser: any[] = [];

  loginObj: any = {
    email: '',
    password: '',
    role: ''
  }
  router = inject(Router);

  constructor(private loginService: LoginService) {
    sessionStorage.setItem('token', '')
  }

  onLogin() {
    const key = CryptoJS.enc.Utf8.parse('your-secret-key-16-bytes'); // Ensure this is 16 bytes
    const iv = CryptoJS.lib.WordArray.random(16); // Generate a random IV

    const encrypted = CryptoJS.AES.encrypt(this.loginObj.password, key, {
      iv: iv,
      mode: CryptoJS.mode.CBC,
      padding: CryptoJS.pad.Pkcs7
    });

    // Combine IV and encrypted text and encode in Base64
    const encryptedPassword = iv.concat(encrypted.ciphertext).toString(CryptoJS.enc.Base64);

    const encryptedLoginObj = {
      email: this.loginObj.email,
      password: encryptedPassword
    };

    this.loginService.onLogin(encryptedLoginObj).subscribe({
      next: (response) => {
        sessionStorage.setItem('token', response.token);
        sessionStorage.setItem('customerID', response.id);

        this.loginObj.role = response.role;

        if (this.loginObj.role == 1) {
          this.router.navigateByUrl('customer-home');
        } else {
          this.router.navigateByUrl('admin-home');
        }
      },
      error: (err) => {
        console.error("Error: ", err);
      }
    });
  }
}
