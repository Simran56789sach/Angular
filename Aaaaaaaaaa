I want to apply validators on field in angular 
customername, contactno, emailid, address,dob,gender to be required 

<h1>Add Customer</h1>
<form #form="ngForm" (ngSubmit)="addCustomer()" class="form-container">
    <div class="form-group">
        <label for="customerName">Customer Name:</label>
        <input type="text" id="customerName" name="customerName" [(ngModel)]="addCustomerRequest.name" required>
    </div>
    <div class="form-group">
        <label for="contactNo">Contact No:</label>
        <input type="text" id="contactNo" name="contactNo" [(ngModel)]="addCustomerRequest.contactNo" required>
    </div>
    <div class="form-group">
        <label for="emailId">Email Id:</label>
        <input type="text" id="emailId" name="emailId" [(ngModel)]="addCustomerRequest.emailId" required>
    </div>
    <div class="form-group">
        <label for="address">Address:</label>
        <input type="text" id="address" name="address" [(ngModel)]="addCustomerRequest.address" required>
    </div>
    <div class="form-group">
        <label for="dob">Date Of Birth:</label>
        <input type="text" id="dob" name="dob" [(ngModel)]="addCustomerRequest.dob" required>
    </div>
    <div class="form-group">
        <label for="gender">Gender:</label>
        <select id="gender" name="gender" [(ngModel)]="addCustomerRequest.gender" required>
            <option value="">Select Gender</option>
            <option value="M">Male</option>
            <option value="F">Female</option>
            <option value="O">Other</option>
        </select>
    </div>
    <button type="submit" class="submit-button">Submit</button>
</form>
<div class="error-message">
    <p>{{errorMessage}}</p>
</div>

import { Component } from '@angular/core';
import { CustomerDetail } from '../Models/CustomerDetail';
import { CustomerService } from '../customer.service';

@Component({
  selector: 'app-customer-add',
  templateUrl: './customer-add.component.html',
  styleUrl: './customer-add.component.css'
})
export class CustomerAddComponent {
 
  addCustomerRequest: CustomerDetail;
  customerNotFound: boolean = true;
  errorMessage: string = "";
 
  constructor(private customerService: CustomerService) {
    this.addCustomerRequest = new CustomerDetail();
  }
 
  ngOnInit(): void {
 
  }
 
  addCustomer() {
    this.customerService.addCustomer(this.addCustomerRequest).subscribe({
       next: (customer) => {
        this.customerNotFound = false;
         console.log("Customer added Successfully: ", customer);
         console.log(this.addCustomerRequest);
         this.resetForm();
       },
       error: (err) => {
        this.customerNotFound = true;
        this.errorMessage = "Invalid Account Number";
       }
    });
 
    console.log(this.addCustomerRequest);
  }
 
  resetForm(): void {
    this.addCustomerRequest = new CustomerDetail();
  }
}
 
